name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:

env:
  GCS_BUCKET: ${{ secrets.PROD_BUCKET }}
  TEST_URL: 'https://chrisjohnson.tech'

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  provision_resources:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2

      - id: set_up_terraform
        name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      
      - id: tf_init
        name: Terraform init
        run: terraform init
        env: 
          GOOGLE_CREDENTIALS: ${{ secrets.TF_GCP_CREDS }}
    
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
        env: 
          GOOGLE_CREDENTIALS: ${{ secrets.TF_GCP_CREDS }}        

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.PR_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - id: tf_apply
        name: Terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env: 
          GOOGLE_CREDENTIALS: ${{ secrets.TF_GCP_CREDS }}

  invalidate_cdn_cache:
    needs: [provision_resources]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2
        
      - id: auth
        name: Authorise with GCP project
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/613299291948/locations/global/workloadIdentityPools/prod-pool/providers/github-provider'
          service_account: 'github-actions-runner@crc-prod-site.iam.gserviceaccount.com'

      - id: invalidate-cdn
        name: Invalidate CDN cache
        run: gcloud compute url-maps invalidate-cdn-cache https-url-map --path "/*" --async

  update_site:
    needs: [invalidate_cdn_cache]
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: Checkout repo
      uses: actions/checkout@v2
      
    - id: auth
      name: Authorise with GCP project
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: 'projects/613299291948/locations/global/workloadIdentityPools/prod-pool/providers/github-provider'
        service_account: 'github-actions-runner@crc-prod-site.iam.gserviceaccount.com'

    - id: setup-gcloud
      name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v0

    - id: sync_content
      name: Sync content to prod bucket
      run: gsutil -m rsync -R ${{ github.workspace }}/content gs://$GCS_BUCKET

  test-live-site:
    needs: [update_site]
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: Checkout repo
      uses: actions/checkout@v2

    - id: live-page-test
      name: Test site in production
      uses: cypress-io/github-action@v4
      env:
        CYPRESS_RESUME_PAGE: 'http://chrisjohnson.tech'
      with:
        spec: ${{ github.workspace }}/cypress/e2e/page_content.cy.js
        browser: chrome